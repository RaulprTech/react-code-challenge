{"version":3,"sources":["Icon/index.js","components/Mineral.jsx","components/NPRI.jsx","components/NPRIS.jsx","components/Minerals.jsx","EditTractOwnership/index.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faLevelUpAlt","faMinusCircle","faPlus","faSmile","Icon","iconProps","icon","rotation","getIconProps","props","useState","owner","setOwner","interest","setInterest","lease","setLease","FormControl","placeholder","onChange","ev","target","value","InputGroup","className","Append","Text","npri","setNpri","Button","variant","size","active","ownerNPRI","setOwnerNPRI","values","setValues","min","map","li","i","NPRI","key","onClick","minerals","setValue","Mineral","pos","indexOf","newMinerals","splice","removeMineral","NPRIS","EditTractOwnership","setMinerals","Table","responsive","title","Minerals","npm","start","tractOwnerships","id","uuidv4","npris","App","Container","Row","Col","Jumbotron","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ed46bf0.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faLevelUpAlt,\n  faMinusCircle,\n  faPlus,\n  faSmile,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faLevelUpAlt, faMinusCircle, faPlus, faSmile);\n\nconst getIconProps = icon => {\n  switch (icon) {\n    case 'add':\n      return {\n        icon: 'plus',\n      };\n    case 'indent':\n      return {\n        icon: 'level-up-alt',\n        rotation: 90,\n      };\n    case 'remove':\n      return {\n        icon: 'minus-circle',\n      };\n    case 'smile':\n      return {\n        icon: 'smile',\n      };\n    default:\n      return {};\n  }\n};\n\nconst Icon = ({ icon }) => {\n  const iconProps = getIconProps(icon);\n\n  return <FontAwesomeIcon {...iconProps} />;\n};\n\nexport default Icon;\n","import React, {useState} from 'react';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Icon from '../Icon';\r\n\r\nexport default (props) => {\r\n    const [owner, setOwner] = useState(props.owner);\r\n    const [interest, setInterest] = useState(props.interest);\r\n    const [lease, setLease] = useState(props.lease);\r\n\r\n    return(\r\n        <>\r\n            <td>\r\n                <FormControl\r\n                    placeholder=\"Luke Skywalker\"\r\n                    onChange={(ev) => setOwner(ev.target.value)}\r\n                    value={owner}\r\n                />\r\n            </td>\r\n            <td>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"0.5\"\r\n                        onChange={(ev) => setInterest(ev.target.value)}\r\n                        value={interest}\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <InputGroup.Text>%</InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </td>\r\n            <td></td>\r\n            <td>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"tatooine lease\"\r\n                        onChange={(ev) => setLease(ev.target.value)}\r\n                        value={lease}\r\n                    />\r\n                </InputGroup>\r\n            </td>\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Icon from '../Icon';\r\n\r\n\r\nexport default (props) => {\r\n    let [owner, setOwner] = useState(props.owner);\r\n    let [npri, setNpri] = useState(props.npri);\r\n    \r\n    return(\r\n                <tr>\r\n                    <td>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Append>\r\n                                <InputGroup.Text><Icon icon=\"indent\"/></InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                            <FormControl\r\n                                placeholder=\"Luke Skywalker\"\r\n                                onChange={(ev)=>setOwner(ev.target.value)}\r\n                                value={owner}\r\n                            />\r\n                        </InputGroup>\r\n                    </td>\r\n                    <td></td>\r\n                    <td>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                placeholder=\"0.5\"\r\n                                onChange={(ev)=>setNpri(ev.target.value)}\r\n                                value={npri}\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <InputGroup.Text>%</InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </td>\r\n                    <td>\r\n                    </td>\r\n                    <td>\r\n                        <Button variant=\"secondary\" size=\"sm\" active><Icon icon=\"remove\"/></Button>\r\n                    </td>\r\n                </tr>\r\n    )\r\n  }\r\n  ","import React, {useEffect, useState} from 'react';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nimport NPRI from './NPRI';\r\nimport Icon from '../Icon';\r\n\r\nexport default (props) => {\r\n    const [ownerNPRI, setOwnerNPRI] = useState(\"\");\r\n    const [npri, setNpri] = useState(\"\");\r\n    const [values, setValues] = useState([]);\r\n\r\n    let min = [];\r\n\r\n    function newNPRI(){\r\n        min.owner = ownerNPRI;\r\n        min.npri = npri;\r\n        setValues(values  =>  [ ... values, min]);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            {\r\n                values.map((li, i) => {\r\n                    return (\r\n                        <NPRI key={i} owner={li.owner} npri={li.npri} />                       \r\n                    )\r\n                })\r\n            }\r\n            <tr>\r\n                <td>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text><Icon icon=\"indent\" /></InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                        <FormControl\r\n                            placeholder=\"Luke Skywalker\"\r\n                            onChange={(ev) => setOwnerNPRI(ev.target.value)}\r\n                        />\r\n                    </InputGroup>\r\n                </td>\r\n                <td></td>\r\n                <td>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                            placeholder=\"0.5\"\r\n                            onChange={(ev) => setNpri(ev.target.value)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Text>%</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                    <Button variant=\"secondary\" size=\"sm\" active><Icon icon=\"remove\" /></Button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        size=\"sm\"\r\n                        onClick={(ev) => newNPRI()}\r\n                        active>\r\n                        <Icon icon=\"add\" />\r\n                        {\" Add NPRI\"}\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nimport Icon from '../Icon';\r\nimport Mineral from './Mineral';\r\nimport NPRIS from './NPRIS';\r\n\r\n\r\nexport default ({minerals}) => {\r\n    const [value, setValue] = useState(minerals);\r\n\r\n\r\n    let newMinerals = [];\r\n\r\n    function removeMineral(i) {\r\n        let pos = minerals.indexOf(i);\r\n        let newMinerals = minerals.splice(pos, 1);\r\n        setValue(newMinerals);\r\n      }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                minerals.map((li, i) => {\r\n                    return (\r\n                        <>\r\n                        <tr>\r\n                            <Mineral key={i} owner={li.owner} interest={li.interest} lease={li.lease} />\r\n                            <td>\r\n                                <Button \r\n                                    variant=\"secondary\"\r\n                                    size=\"sm\"\r\n                                    onClick={(ev)=>removeMineral()}\r\n                                    active>\r\n                                        <Icon icon=\"remove\" />\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        <NPRIS/>\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\nimport { Button, Table, InputGroup, FormControl } from 'react-bootstrap';\n\nimport Icon from '../Icon';\n\nimport Minerals from '../components/Minerals';\n\nconst EditTractOwnership = ({ value = [], onChange = () => { } }) => {\n\n  const [owner, setOwner] = useState(\"\");\n  const [interest, setInterest] = useState(\"\");\n  const [lease, setLease] = useState(\"\");\n\n  const [minerals, setMinerals] = useState([]);\n\n  let min = [];\n\n  function addMineral() {\n    min.owner = owner;\n    min.interest = interest;\n    min.lease = lease;\n    setMinerals(minerals => [...minerals, min]);\n  }\n\n\n  const titles = [\"Owner\", \"Mineral Interest\", \"NPRI\", \"Lease\"];\n\n  return (\n    <Table responsive>\n      <thead>\n        <tr>\n          {\n            titles.map((title, i) => (<td><b>{title}</b></td>))\n          }\n          <td></td>\n        </tr>\n      </thead>\n      <tbody>\n        <Minerals minerals={minerals}/>\n        <tr>\n          <td>\n            <FormControl\n              placeholder=\"Luke Skywalker\"\n              onChange={(ev) => setOwner(ev.target.value) }npm start\n\n              //\n            />\n          </td>\n          <td>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                placeholder=\"0.5\"\n                onChange={(ev) => setInterest(ev.target.value)}\n                //\n              />\n              <InputGroup.Append>\n                <InputGroup.Text>%</InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n          </td>\n          <td></td>\n          <td>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                placeholder=\"tatooine lease\"\n                onChange={(ev) => setLease(ev.target.value)}\n                // \n              />\n            </InputGroup>\n          </td>\n          <td>\n            <Button \n              variant=\"secondary\" \n              size=\"sm\"\n              active>\n                <Icon icon=\"remove\" />\n            </Button>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={(ev) => addMineral()}\n              active>\n              <Icon icon=\"add\" />\n              {\" Add Mineral interest\"}\n            </Button>\n          </td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n\nexport default EditTractOwnership;\n","import React, {useState} from 'react';\nimport { Button, Table, Col, Container, Jumbotron, Row, InputGroup, FormControl } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nimport EditTractOwnership from './EditTractOwnership';\nimport Icon from './Icon';\n\n\n\nconst tractOwnerships = [\n  {\n    id: uuidv4(),\n    owner: 'Luke Skywalker',\n    interest: 0.5,\n    lease: 'Tatooine Lease',\n    npris: [\n      {\n        id: uuidv4(),\n        owner: 'Leia Organa',\n        interest: 0.45,\n      },\n      {\n        id: uuidv4(),\n        owner: 'Han Solo',\n        interest: 0.15,\n      },\n    ],\n  },\n];\n\n\nfunction App() {\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Jumbotron>\n            <h1>\n              Landdox Code Challenge <Icon icon=\"smile\" />\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <EditTractOwnership value={tractOwnerships} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}